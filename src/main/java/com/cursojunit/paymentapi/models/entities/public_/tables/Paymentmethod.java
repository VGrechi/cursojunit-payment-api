/*
 * This file is generated by jOOQ.
*/
package com.cursojunit.paymentapi.models.entities.public_.tables;


import com.cursojunit.paymentapi.models.entities.public_.Keys;
import com.cursojunit.paymentapi.models.entities.public_.Public;
import com.cursojunit.paymentapi.models.entities.public_.tables.records.PaymentmethodRecord;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Paymentmethod extends TableImpl<PaymentmethodRecord> {

    private static final long serialVersionUID = -1096540603;

    /**
     * The reference instance of <code>PUBLIC.PAYMENTMETHOD</code>
     */
    public static final Paymentmethod PAYMENTMETHOD = new Paymentmethod();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PaymentmethodRecord> getRecordType() {
        return PaymentmethodRecord.class;
    }

    /**
     * The column <code>PUBLIC.PAYMENTMETHOD.PAYMENTMETHODID</code>.
     */
    public final TableField<PaymentmethodRecord, Integer> PAYMENTMETHODID = createField("PAYMENTMETHODID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("(NEXT VALUE FOR PUBLIC.SYSTEM_SEQUENCE_4B3BDDBF_0A8C_4CEB_9B9D_64E84537F8C5)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>PUBLIC.PAYMENTMETHOD.PAYMENTID</code>.
     */
    public final TableField<PaymentmethodRecord, Integer> PAYMENTID = createField("PAYMENTID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.PAYMENTMETHOD.PAYMENTMETHOD</code>.
     */
    public final TableField<PaymentmethodRecord, String> PAYMENTMETHOD_ = createField("PAYMENTMETHOD", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.PAYMENTMETHOD.PAYMENTAMOUNT</code>.
     */
    public final TableField<PaymentmethodRecord, BigDecimal> PAYMENTAMOUNT = createField("PAYMENTAMOUNT", org.jooq.impl.SQLDataType.DECIMAL.precision(15, 2).nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.PAYMENTMETHOD</code> table reference
     */
    public Paymentmethod() {
        this("PAYMENTMETHOD", null);
    }

    /**
     * Create an aliased <code>PUBLIC.PAYMENTMETHOD</code> table reference
     */
    public Paymentmethod(String alias) {
        this(alias, PAYMENTMETHOD);
    }

    private Paymentmethod(String alias, Table<PaymentmethodRecord> aliased) {
        this(alias, aliased, null);
    }

    private Paymentmethod(String alias, Table<PaymentmethodRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PaymentmethodRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PAYMENTMETHOD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Paymentmethod as(String alias) {
        return new Paymentmethod(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Paymentmethod rename(String name) {
        return new Paymentmethod(name, null);
    }
}
